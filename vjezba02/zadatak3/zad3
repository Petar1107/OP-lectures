//3. Definirati strukturu kruznica i strukturu pravokutnik koja predstavlja
//pravokutnik èije su stranice paralelne sa osima apscisa i ordinata. Napisati
//funkciju koja prima niz pravokutnika i jednu kruznicu i vraæa broj pravokutnika koji sijeku kružnicu. Niz pravokutnika i kružnica šalju se u funkciju
//pomoæu const referenci.
//
#include <bits/stdc++.h>
#include <iostream>
using namespace std;

struct pravokutnik
{
    int x1;
    int x2;
    int y1;
    int y2;
};

struct kruznica
{
    int x;
    int y;
    int r;
};

int check (pravokutnik *arr_pravokutnik, kruznica &kr)
{
    float distance_a, distance_c;
    int counter=0;

    for(int i=0; i<1; i++)
    {

        distance_a= sqrt(fabsf(pow(arr_pravokutnik->x1-kr.x, 2) + pow(arr_pravokutnik->y1-kr.y, 2)));
        distance_c= sqrt(fabsf(pow(arr_pravokutnik->x2-kr.x, 2) + pow(arr_pravokutnik->y2-kr.y, 2)));
        if((min(distance_a, distance_c) <= kr.r )&&(max(distance_a, distance_c) >= kr.r))
        {
            counter++;
        }
    }
    return counter;
}
void input_pravokutnik(pravokutnik* arr_pravokutnik,int n)
{
    for(int i=0; i<n; i++)
    {
        cout <<"unesite x1: ";
        cin >>arr_pravokutnik->x1;
        cout <<"unesite y1: ";
        cin >>arr_pravokutnik->y1;

        cout <<"unesite x2: ";
        cin >> arr_pravokutnik->x2;
        cout << "unesite y2: ";
        cin >> arr_pravokutnik->y2;
    }
}
void input_kruznica(kruznica kr)
{
    cout<<"unesite x:";
    cin>>kr.x;
    cout<<"unesite y:";
    cin>>kr.y;
    cout<<"unesite radijus:";
    cin>>kr.r;
}
int main(void)
{
    int broj;
    cout << "unesite broj pravokutnika: " << endl;
    cin >> broj;
    pravokutnik* arr_pravokutnik = new pravokutnik[broj];
    kruznica kr;
    cout << "unesite kordinate sredista kruznice i radijus: " << endl;
    input_kruznica(kr);
    cout << "unesite kordinate dvije tocke pravokutnika: " << endl;
    input_pravokutnik(arr_pravokutnik,broj);
    cout<< check(arr_pravokutnik, kr);
}
